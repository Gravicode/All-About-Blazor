@page "/session-demo"

@using TestBlazor.Data
@inject WeatherForecastService ForecastService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h3>StorageDemo</h3>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    protected override async Task OnInitializedAsync()
    {
        var key = "forecasts";
        var temp = await ForecastService.GetForecastAsync(DateTime.Now);
        //await sessionStorage.SetItem<WeatherForecast[]>(key, temp);
        await sessionStorage.SetItemAsync(key, temp);
        //get from session
        //var fromSession = await sessionStorage.GetItem<WeatherForecast[]>(key);
        //get from local storage
        forecasts = await sessionStorage.GetItemAsync<WeatherForecast[]>(key);


    }
    WeatherForecast[] forecasts;

}
