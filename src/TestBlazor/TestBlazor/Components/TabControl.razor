<div>This is a TabControl</div>
<CascadingValue Value="this">
    <div class="btn-group" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            if(tabPage.Visible){
            <button type="button"
                    class="btn @GetButtonClass(tabPage)"
                    @onclick=@( () => ActivatePage(tabPage) )>
                @tabPage.Text
            </button>
            }
        }
    </div>
    @ChildContent
</CascadingValue>
@code {
    // Next line is needed so we are able to add <TabPage> components inside
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public TabPage ActivePage { get; set; }
    [Parameter]
    public List<TabPage> Pages {set;get;}

    protected override async Task OnInitializedAsync()
    {
        if(Pages==null)
            Pages = new List<TabPage>();
    }
    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }
    string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-primary" : "btn-secondary";
    }
    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }
}